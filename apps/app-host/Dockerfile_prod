#stage 1 cache node_modules
FROM node:lts-alpine3.18 AS installer
WORKDIR /app
COPY package.json .
RUN yarn install

# stage 2 
FROM node:lts-alpine3.18 as node
WORKDIR /app
COPY --from=installer /app /app
COPY . .
#RUN npm install --global yarn
#RUN pwd && ls
RUN yarn global add @nrwl/cli
COPY ./apps/app-host/src/assets/module-federation-prod.manifest.json ./apps/app-host/src/assets/module-federation.manifest.json
#RUN yarn install
ENV NODE_OPTIONS=--max_old_space_size=8192
RUN npx nx build app-host --configuration=prod

# #stage 3
FROM nginxinc/nginx-unprivileged
#FROM nginx:alpine
COPY ./apps/app-host/nginx.conf /etc/nginx/nginx.conf
#COPY --from=node app/dist/apps/app-host /usr/share/nginx/html
COPY --from=node app/dist/apps/app-host /usr/share/nginx/html
# When the container starts, replace the env.js with values from environment variables
#CMD ["/bin/sh",  "-c",  "envsubst < /usr/share/nginx/html/assets/env.prod.js > /usr/share/nginx/html/assets/env.js && envsubst < /usr/share/nginx/html/assets/module-federation-prod.manifest.json > /usr/share/nginx/html/assets/module-federation.manifest.json && exec nginx -g 'daemon off;'"]
#CMD ["/bin/sh",  "-c",  "envsubst < /tmp/share/nginx/html/assets/env.prod.js > /tmp/share/nginx/html/assets/env.js && envsubst < /tmp/share/nginx/html/assets/module-federation-prod.manifest.json > /tmp/share/nginx/html/assets/module-federation.manifest.json && exec nginx -g 'daemon off;'"]
